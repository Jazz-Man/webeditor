var CrsaProjectBrowser = function (e) {
    var t = this;
    this.options = null, this.crsaProjects = null, this.onFileSelected = null, this.title = null, this.intro = null, this.selectedProject = null;
    var i = {modal: !0};
    this.opts = $.extend({}, i, e), this.setProjects = function (e) {
        this.crsaProjects = e
    }, this.show = function () {
        var e = null, i = null, l = $("<div/>", {"class": "project-browser"}).html('<div class="clearfix"><div class="pills"></div><div class="tabs"></div></div>'), s = $('<ul class="nav nav-pills nav-stacked"></ul>').appendTo(l.find(".pills")), a = $('<div class="tab-content"></div>').appendTo(l.find(".tabs"));
        if ($.each(this.crsaProjects, function (l, n) {
                for (var r = "project-browser-tab-" + l, c = $('<li><a href="#' + r + '" data-toggle="pill">' + n.name + "</a></li>").appendTo(s), o = $('<ul class="tab-pane fade" id="' + r + '"></ul>').appendTo(a), d = 0; d < n.root.children.length; d++) {
                    var h = n.root.children[d];
                    if (h.isFile && "page" == h.tag) {
                        var p = $("<li/>").html("<h3>" + h.name + "</h3>").data("file", h).data("project", n).appendTo(o);
                        h.image && $("<img/>", {src: h.image}).prependTo(p), e == h && (p.addClass("selected"), i = p)
                    }
                }
                (t.selectedProject ? t.selectedProject == n : 0 == l) && (c.addClass("active"), o.addClass("active in")), c.tab()
            }), this.intro) {
            var n = $(this.intro).prependTo(l);
            isApp() && n.find("a").on("click", function (e) {
                e.preventDefault();
                var t = require("nw.gui"), i = $(e.delegateTarget).attr("href");
                t.Shell.openExternal(i)
            })
        }
        var r = makeModalDialog(this.title ? this.title : "Select item", "Close", null, l, function () {
        }, function () {
        }, function (e) {
            e.find(".modal-dialog").css("width", "890px")
        });
        a.find("li").on("click", function (l) {
            var s = $(l.delegateTarget), a = s.data("file");
            i && (i.removeClass("selected"), i = null), e == a ? e = null : (e = a, i = s, s.addClass("selected")), t.onFileSelected && t.onFileSelected(a, s.data("project")), r.modal("hide"), l.preventDefault()
        })
    }
}, pgRecentFiles = function () {
    this.list = [];
    var e = this, t = 10;
    this.add = function (e) {
        this.remove(e, !0), this.list.unshift(e), this.list.length > t && this.list.splice(t, this.list.length - t), s(), i()
    }, this.remove = function (e, t) {
        var l = this.list.indexOf(e);
        l >= 0 && this.list.splice(l, 1), t || (s(), i())
    }, this.removeAll = function () {
        this.list = [], s(), i()
    };
    var i = function () {
        var t = JSON.stringify(e.list);
        localStorage.pgRecentFiles = t
    }, l = function (t) {
        var i = $(t.delegateTarget), l = i.attr("href");
        pinegrow.openPage(l), setTimeout(function () {
            e.add(l)
        }, 100), t.preventDefault()
    }, s = function () {
        for (var t = $(".menu-file-recent").find("ul").html(""), i = $(".empty-canvas .recent-files"), s = $(".empty-canvas .recent-files ul").html(""), a = 0; a < e.list.length; a++) {
            var n = e.list[a];
            n.length > 50 && (n = "&hellip;" + n.substr(n.length - 50));
            var r = '<li><a href="' + e.list[a] + '" class="menu-file-recent-item">' + n + "</a></li>";
            t.append(r), s.append(r)
        }
        t.find("li > a").on("click", l), s.find("li > a").on("click", l), e.list.length ? i.show() : i.hide()
    };
    localStorage.pgRecentFiles && (this.list = JSON.parse(localStorage.pgRecentFiles)), s()
};